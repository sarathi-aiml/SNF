{
 "metadata": {
  "kernelspec": {
   "display_name": "Streamlit Notebook",
   "name": "streamlit"
  }
 },
 "nbformat_minor": 5,
 "nbformat": 4,
 "cells": [
  {
   "cell_type": "markdown",
   "id": "beafe711-0ff7-4aa6-bd2d-d58ffc95bb92",
   "metadata": {
    "collapsed": false,
    "name": "OVERVIEW_MD",
    "resultHeight": 339
   },
   "source": "# Classify unstructured customer reviews with Snowflake Cortex\nUnderstanding customer feedback is critical for businesses, but analyzing large volumes of unstructured text can be challenging. In this notebook, you'll use Snowflake Cortex to **Classify unstructured text** reviews into key categories\n\nBy the end, you'll see how Snowflake can help extract insights from unstructured data quickly and effectively.\n\n### Context\n*Tasty Bytes* is a global food truck network operating in 15 countries with a fleet of 450 trucks. They collect customer reviews to gain insights into their food truck operations, with feedback coming from multiple sources.\n\nIn this notebook, we will analyze these collated customer reviews using Snowflake Cortex to understand what our international customers are saying.\n\n##"
  },
  {
   "cell_type": "markdown",
   "id": "4db3f281-4a3d-48a5-b07e-3e967ea5a824",
   "metadata": {
    "collapsed": false,
    "name": "IMPORT_PACKAGES_MD",
    "resultHeight": 134
   },
   "source": "**Import sample data**\n\nIn this next SQL query, we will populate sample data that is used in this template."
  },
  {
   "cell_type": "code",
   "id": "9980dae7-06d9-45b4-85e8-1a5f7c5ff240",
   "metadata": {
    "language": "sql",
    "name": "IMPORT_SAMPLE_DATA",
    "codeCollapsed": false
   },
   "outputs": [],
   "source": "USE ROLE SNOWFLAKE_LEARNING_ROLE;\n\n-- use the existing database, schema and warehouse\nUSE DATABASE SNOWFLAKE_LEARNING_DB;\nUSE WAREHOUSE SNOWFLAKE_LEARNING_WH;\n\nSET schema_name = CONCAT(current_user(), '_CLASSIFY_UNSTRUCTURED_CUSTOMER_REVIEWS');\nUSE SCHEMA IDENTIFIER($schema_name);\n\n  /*--\n  • file format and stage creation\n  --*/\n\n  CREATE OR REPLACE FILE FORMAT csv_ff \n    TYPE = 'csv';\n\n  CREATE OR REPLACE STAGE s3load\n    COMMENT = 'Quickstarts S3 Stage Connection'\n    URL = 's3://sfquickstarts/tastybytes-voc/'\n    FILE_FORMAT = csv_ff;\n\n\n  /*--\n  • raw zone table build \n  --*/\n\n  -- truck_reviews table\n  CREATE OR REPLACE TABLE truck_reviews\n  (\n      order_id NUMBER(38,0),\n      language VARCHAR(16777216),\n      source VARCHAR(16777216),\n      review VARCHAR(16777216),\n      review_id NUMBER(18,0)\n  );\n  \n  /*--\n  • raw zone table load \n  --*/\n  \n  -- truck_reviews table load\n  COPY INTO truck_reviews\n  FROM @s3load/raw_support/truck_reviews/;\n\n-- setup completion note\nSELECT 'Setup is complete' AS note;\n",
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "id": "20f2093f-dd35-411b-8ede-90556f7e2ccf",
   "metadata": {
    "name": "IMPORT_PYTHON_PACKAGES",
    "collapsed": false
   },
   "source": "**Import Python packages**\n\nSnowflake Notebooks include Streamlit and the third-party packages listed in the Snowflake Anaconda channel. \n\nNow that the necessary packages are installed, we will import the installed packages into the notebook."
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3775908f-ca36-4846-8f38-5adca39217f2",
   "metadata": {
    "collapsed": false,
    "language": "python",
    "name": "IMPORT_PACKAGES",
    "resultHeight": 0,
    "codeCollapsed": false
   },
   "outputs": [],
   "source": "# Import Python packages\nimport streamlit as st\nimport pandas as pd\n\n# Snowpark\nfrom snowflake.snowpark.context import get_active_session\nimport snowflake.snowpark.functions as F\n\n# Cortex Functions\nimport snowflake.cortex  as cortex\n\nsession = get_active_session()"
  },
  {
   "cell_type": "markdown",
   "id": "7a762de5-cca7-44e5-a63d-82009d89059a",
   "metadata": {
    "name": "PREVIEW_TABLE_MD",
    "collapsed": false
   },
   "source": "## Overview of Reviews Table\n\n"
  },
  {
   "cell_type": "code",
   "id": "c7dc6837-6c2a-4aed-820d-6c1ce45ce06e",
   "metadata": {
    "language": "sql",
    "name": "PREVIEW_TABLE"
   },
   "outputs": [],
   "source": "SELECT * FROM TRUCK_REVIEWS LIMIT 15;",
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "id": "8e8d723d-e5a6-4aca-887e-ec30fb8410a6",
   "metadata": {
    "name": "INTRO_CLASSIFY",
    "collapsed": false
   },
   "source": "## Classify text into categories\nTo better understand how likely customers are to recommend a given food truck, we can use `cortex.classify_text` along with a task description of what we want the LLM to classify.\n\nWe can use the classify text function on a single string, on a Python dataframe, or directly in SQL."
  },
  {
   "cell_type": "markdown",
   "id": "41f56878-c2ed-4b3b-9885-cb3e8ae35e14",
   "metadata": {
    "name": "PYTHON_CLASSIFY_MD",
    "collapsed": false
   },
   "source": "### Classify text on a single string using Python"
  },
  {
   "cell_type": "code",
   "id": "3426f4ea-5000-47fc-9ba8-317411778130",
   "metadata": {
    "language": "python",
    "name": "PYTHON_CLASSIFY"
   },
   "outputs": [],
   "source": "review = \"Absolutely loved my order from Smoky BBQ in Boston! I went with the classic fried pickles, and let me tell you - they did not disappoint. The crispy, flavorful coating perfectly complemented the tangy pickles, and I couldn't get enough. The portion was generous, and the service was quick and friendly. If you're in the mood for some delicious BBQ, Smoky BBQ is the way to go. Highly recommend!\"\n\ncategories = [\"Likely\", \"Unlikely\", \"Unsure\"]\n\ncortex.classify_text(review, categories = categories)",
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "id": "fa27f178-5515-4cf6-9cc1-0f73c830b371",
   "metadata": {
    "name": "PYTHON_CLASSIFY_DF_MD",
    "collapsed": false
   },
   "source": "### Classify an entire column of text in a Python dataframe\n\nWe can also add a task description to aid the LLM in classification."
  },
  {
   "cell_type": "code",
   "id": "fa98f3d4-200d-4158-bc6f-b62132238ad8",
   "metadata": {
    "language": "python",
    "name": "PYTHON_CLASSIFY_DF",
    "resultHeight": 188,
    "collapsed": false,
    "codeCollapsed": false
   },
   "outputs": [],
   "source": "# Task description to understand whether a customer would recommend food truck based on their review \ntask_description = \"\"\"\nTell me based on the following food truck customer review, will they recommend the food truck to \\\ntheir friends and family?\n\"\"\"\n\nreviews_df = session.table('truck_reviews')\n\nreviews_df = reviews_df.withColumn('RECOMMEND', cortex.classify_text(F.col('REVIEW'), categories, task_description)['label'])\n\nreviews_df.select([\"REVIEW\",\"RECOMMEND\"]).show(15, max_width = 125)",
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "id": "1eccb42a-d85f-44b7-a7a3-ff4044c83517",
   "metadata": {
    "name": "SQL_CLASSIFY_MD",
    "collapsed": false
   },
   "source": "### Or classify each cell in an entire column directly in SQL"
  },
  {
   "cell_type": "code",
   "id": "8f2302a7-522d-4acd-a57a-b8cd2cf94959",
   "metadata": {
    "language": "sql",
    "name": "SQL_CLASSIFY"
   },
   "outputs": [],
   "source": "SELECT \n  REVIEW_ID,\n  REVIEW,\n  CAST(\n    SNOWFLAKE.CORTEX.CLASSIFY_TEXT(\n      REVIEW,\n      ['Likely','Unlikely','Unsure'],\n      {'task_description': 'Tell me based on the following food truck customer review, will they recommend the food truck to their friends and family?'}\n    ):\"label\" AS STRING\n  ) AS RECOMMEND\nFROM TRUCK_REVIEWS\nLIMIT 15;\n",
   "execution_count": null
  },
  {
   "cell_type": "markdown",
   "id": "e5137071-7b70-44f1-afac-2396cc03833f",
   "metadata": {
    "name": "CONCLUSION",
    "collapsed": false
   },
   "source": "# Conclusion\nIn this template, we've demonstrated how to classify unstructured customer feedback using Snowflake Cortex. \n\nBy following these steps, you now have a replicable process for **classifying text** into categories with a single LLM function. This approach allows businesses to quickly gain actionable insights from unstructured data, enabling data-driven decision-making. \n\nTo learn more about Cortex Classify and other Cortex LLM Functions, check out the [Cortex Classify Text](https://docs.snowflake.com/en/sql-reference/functions/classify_text-snowflake-cortex) and [Cortex LLM Functions](https://docs.snowflake.com/en/user-guide/snowflake-cortex/llm-functions) documentation."
  }
 ]
}
